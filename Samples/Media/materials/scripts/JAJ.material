shared_params switches
{
        shared_param_named awesome bool true

}

shared_params colors
{
        shared_param_named R float 1.0
        // shared_param_named GB float2 0.0 1.0
}

shared_params more_switches
{
        shared_param_named more_awesome bool false
}

//shared_params counters

//////////
// HLSL //
//////////
vertex_program JAJ/Basic/VS_HLSL hlsl
{
        source JAJBasic.hlsl
        entry_point mainVS
        target vs_4_0

        default_params
        {
                param_named_auto WorldViewProj worldviewproj_matrix
        }
}

geometry_program JAJ/Basic/GS_HLSL hlsl
{
        source JAJBasic.hlsl
        entry_point mainGS
        target gs_4_0
        uses_adjacency_information true

        default_params
        {
                param_named IsoValue float 1
        }
}

fragment_program JAJ/Basic/PS_HLSL hlsl
{
        source JAJBasic.hlsl
        entry_point mainPS
        target ps_4_0
}

//////////
//  CG  //
//////////
vertex_program JAJ/Basic/VS_CG cg
{
        source JAJBasic.cg
        entry_point mainVS
        profiles vp40 arbvp1

        default_params
        {
                param_named_auto WorldViewProj worldviewproj_matrix
        }
}

geometry_program JAJ/Basic/GS_CG cg
{
        source JAJBasic.cg
        entry_point mainGS
        profiles gpu_gp gp4_gp
        uses_adjacency_information true

        default_params
        {
            param_named IsoValue float 1
        }
}

fragment_program JAJ/Basic/PS_CG cg
{
        source JAJBasic.cg
        entry_point mainPS
        profiles fp40 arbfp1
}

//////////
// GLSL //
//////////
compute_program JAJ/Basic/CS_GLSL glsl
{
        source JAJBasicCS.glsl
        syntax glsl430
        compute_group_dimensions 32 1 1
        //TODO is this necessary?
        // placement postrender
        //TODO how to handle glMemoryBarrier?
        // do other programs need to support this?
        // should be able to handle multiple barriers via bit ops
        // pre_memory_barrier texture
        // post_memory_barrier texture

        default_params
        {
            param_named multiplier float 10.0
        }
}

vertex_program JAJ/Basic/VS_GLSL glsl
{
        source JAJBasicVS.glsl
        syntax glsl150

        default_params
        {
            param_named_auto WorldViewProj worldviewproj_matrix
        }
}

geometry_program JAJ/Basic/GS_GLSL glsl
{
        source JAJBasicGS.glsl
        syntax glsl150

        default_params
        {
            param_named_auto WorldViewProj worldviewproj_matrix
        }
}

fragment_program JAJ/Basic/PS_GLSL glsl
{
        source JAJBasicFS.glsl
        syntax glsl430

        default_params
        {
            shared_params_ref switches
            shared_params_ref more_switches
            param_named atom_counter uint 10
            param_named pretty_colours bool false
            param_named image_load_store bool false
            param_named colour_factor uint[3] 50 50 100
        }
}

compute_program JAJ/Basic/CS unified
{
        delegate JAJ/Basic/CS_GLSL
        // delegate JAJ/Basic/CS_HLSL
        // delegate JAJ/Basic/CS_CG
}

vertex_program JAJ/Basic/VS unified
{
        delegate JAJ/Basic/VS_GLSL
        delegate JAJ/Basic/VS_HLSL
        delegate JAJ/Basic/VS_CG
}

geometry_program JAJ/Basic/GS unified
{
        delegate JAJ/Basic/GS_GLSL
        delegate JAJ/Basic/GS_HLSL
        delegate JAJ/Basic/GS_CG
}

fragment_program JAJ/Basic/PS unified
{
        delegate JAJ/Basic/PS_GLSL
        delegate JAJ/Basic/PS_HLSL
        delegate JAJ/Basic/PS_CG
}

material JAJ/Basic
{
        technique
        {
                pass
                {
                    texture_unit
                    {
                      texture data.csv
                      image_bind 0 read X8R8B8G8
                    }

                        compute_program_ref JAJ/Basic/CS
                        {

                        }

                        vertex_program_ref JAJ/Basic/VS
                        {

                        }

                        // tesselation_hull_program_ref JAJ/Basic/THS
                        // {

                        // }

                        // tesselation_domain_program_ref JAJ/Basic/TDS
                        // {

                        // }

                        geometry_program_ref JAJ/Basic/GS
                        {

                        }

                        fragment_program_ref JAJ/Basic/PS
                        {

                        }
                }
        }
}
